# Template vast.ai - ComfyUI via JupyterLab avec authentification
# Usage: vast create -f comfyui-jupyter.yaml

# Configuration de l'instance - Version JupyterLab s√©curis√©e
image: ghcr.io/Nic0lasgon/comfyui-docker-rtx4090:jupyter

# Ressources recommand√©es RTX 4090
resources:
  gpu: 1
  gpu_type: "RTX4090"  # ou "RTX_4090" selon format vast.ai
  cpu: 8
  ram: 32G
  storage: 100G

# Configuration r√©seau et ports
ports:
  - 8888:8888  # JupyterLab (point d'entr√©e s√©curis√©)
  - 8188:8188  # ComfyUI (acc√®s interne via proxy)

# Services web - Le bouton "Open" pointera vers JupyterLab
services:
  - name: JupyterLab
    type: http
    port: 8888
    path: /
    description: "JupyterLab avec acc√®s s√©curis√© √† ComfyUI RTX 4090"
    
  # Service secondaire pour acc√®s direct ComfyUI (optionnel)
  - name: ComfyUI-Direct
    type: http  
    port: 8188
    path: /
    description: "Acc√®s direct ComfyUI (non s√©curis√©)"

# Variables d'environnement pour optimisations
environment:
  PYTORCH_CUDA_ALLOC_CONF: "max_split_size_mb:512"
  CUDA_VISIBLE_DEVICES: "0"
  NVIDIA_VISIBLE_DEVICES: "all"
  NVIDIA_DRIVER_CAPABILITIES: "compute,utility"
  # Mot de passe JupyterLab (changez-le !)
  JUPYTER_PASSWORD: "comfyui4090"

# Script de d√©marrage (on-start)
onstart: |
  #!/bin/bash
  echo "üîê Configuration ComfyUI + JupyterLab RTX 4090..."
  
  # Cr√©er les r√©pertoires de travail
  mkdir -p /workspace/{models,output,input,logs,notebooks}
  mkdir -p /workspace/models/{checkpoints,vae,clip,controlnet,upscale_models}
  
  # T√©l√©charger le script de configuration JupyterLab
  wget -O /workspace/setup-jupyter.sh https://raw.githubusercontent.com/Nic0lasgon/ComfyUI-Docker-RTX4090/main/scripts/setup-jupyter.sh
  chmod +x /workspace/setup-jupyter.sh
  
  # D√©marrer le container avec JupyterLab
  docker run -d \
    --name comfyui-jupyter \
    --gpus all \
    --restart unless-stopped \
    -p 8888:8888 \
    -p 8188:8188 \
    -e PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512 \
    -e CUDA_VISIBLE_DEVICES=0 \
    -e JUPYTER_PASSWORD="${JUPYTER_PASSWORD}" \
    -v /workspace/models:/home/jupyter/ComfyUI/models \
    -v /workspace/output:/home/jupyter/ComfyUI/output \
    -v /workspace/input:/home/jupyter/ComfyUI/input \
    -v /workspace/logs:/home/jupyter/ComfyUI/logs \
    -v /workspace/notebooks:/home/jupyter/notebooks \
    --shm-size=1g \
    --memory=30g \
    ghcr.io/Nic0lasgon/comfyui-docker-rtx4090:jupyter
    
  # Attendre que les services soient pr√™ts
  echo "‚è≥ Attente des services..."
  sleep 30
  
  # Afficher les informations de connexion
  echo "‚úÖ Services pr√™ts !"
  echo "üîê JupyterLab: http://$(curl -s ifconfig.me):8888/"
  echo "   ‚îî‚îÄ Mot de passe: ${JUPYTER_PASSWORD}"
  echo "üé® ComfyUI: Accessible via JupyterLab (onglet ComfyUI)"
  echo "üìä Monitoring: docker logs -f comfyui-jupyter"

# Volumes pour persistance des donn√©es
volumes:
  - /workspace/models:/home/jupyter/ComfyUI/models
  - /workspace/output:/home/jupyter/ComfyUI/output  
  - /workspace/input:/home/jupyter/ComfyUI/input
  - /workspace/logs:/home/jupyter/ComfyUI/logs
  - /workspace/notebooks:/home/jupyter/notebooks

# Configuration Docker
docker_options: "--gpus all --shm-size=1g"

# M√©ta-donn√©es
metadata:
  title: "ComfyUI RTX 4090 + JupyterLab S√©curis√©"
  description: "ComfyUI avec optimisations RTX 4090 accessible via JupyterLab avec authentification par mot de passe"
  version: "1.0.0"
  tags: ["comfyui", "rtx4090", "jupyterlab", "secure", "authentication"]
  
  # Instructions d'utilisation
  instructions: |
    ## üîê Acc√®s s√©curis√© ComfyUI
    
    1. **Connexion JupyterLab**: Cliquez sur "Open JupyterLab"
    2. **Authentification**: Saisissez le mot de passe (d√©faut: comfyui4090)
    3. **Acc√®s ComfyUI**: Dans le lanceur JupyterLab, cliquez sur "ComfyUI"
    
    ## üîß Configuration
    
    - **Changer le mot de passe**: Modifiez JUPYTER_PASSWORD dans le template
    - **Monitoring**: `docker logs -f comfyui-jupyter`
    - **Shell access**: `docker exec -it comfyui-jupyter bash`
    
    ## ‚ö° Optimisations RTX 4090
    
    - CUDA 12.8 + PyTorch 2.5.1
    - xFormers acc√©l√©ration m√©moire
    - Extensions ComfyUI pr√©-install√©es
    - Param√®tres optimis√©s 24GB VRAM